// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@history-card: component checks no wallet: no wallet 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E4E9F2",
        "borderRadius": 4,
        "borderWidth": 1,
        "flex": 1,
        "marginBottom": 0,
        "opacity": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#3366FF",
          "height": 4,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 25,
            "paddingVertical": 8,
          },
          Object {},
        ]
      }
      text="title"
    >
      <Text
        appearance="default"
        category="h6"
        style={
          Array [
            Object {
              "color": "#222B45",
              "fontFamily": "System",
              "fontSize": 18,
              "fontWeight": "800",
            },
            undefined,
          ]
        }
      >
        title
      </Text>
      <View
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={25}
          bbWidth={25}
          fill="#8F9BB3"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "height": 25,
                "width": 25,
              },
              Object {
                "flex": 0,
                "height": 25,
                "width": 25,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={4287601587}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGGroup>
              <RNSVGGroup>
                <RNSVGRect
                  height="24"
                  opacity={0}
                  width="24"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      appearance="default"
      style={
        Array [
          Object {
            "backgroundColor": "#EDF1F7",
            "height": 1,
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "paddingHorizontal": 24,
          "paddingVertical": 16,
        }
      }
    >
      <Text
        appearance="hint"
        category="p1"
        style={
          Array [
            Object {
              "color": "#8F9BB3",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
            },
            undefined,
          ]
        }
      >
        Your wallets history, you can change your current wallet by clicking "use".
      </Text>
      <RCTScrollView
        ItemSeparatorComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        appearance="default"
        data={Array []}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Array [
            Object {
              "backgroundColor": "#F7F9FC",
            },
            undefined,
          ]
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`@history-card: component checks showContent false: showContent false 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E4E9F2",
        "borderRadius": 4,
        "borderWidth": 1,
        "flex": 1,
        "marginBottom": 0,
        "opacity": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#3366FF",
          "height": 4,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 25,
            "paddingVertical": 8,
          },
          Object {
            "paddingVertical": 3,
          },
        ]
      }
      text="title"
    >
      <Text
        appearance="hint"
        category="s1"
        style={
          Array [
            Object {
              "color": "#8F9BB3",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "600",
            },
            undefined,
          ]
        }
      >
        title
      </Text>
      <View
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={25}
          bbWidth={25}
          fill="#8F9BB3"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "height": 25,
                "width": 25,
              },
              Object {
                "flex": 0,
                "height": 25,
                "width": 25,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={4287601587}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGGroup>
              <RNSVGGroup>
                <RNSVGRect
                  height="24"
                  opacity={0}
                  width="24"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      appearance="default"
      style={
        Array [
          Object {
            "backgroundColor": "#EDF1F7",
            "height": 1,
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "paddingHorizontal": 24,
          "paddingVertical": 16,
        }
      }
    >
      <Text
        appearance="default"
        category="c1"
        style={
          Array [
            Object {
              "color": "#222B45",
              "fontFamily": "System",
              "fontSize": 12,
              "fontWeight": "400",
            },
            undefined,
          ]
        }
      >
        Click to show content
      </Text>
    </View>
  </View>
</View>
`;

exports[`@history-card: component checks title change: title change 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E4E9F2",
        "borderRadius": 4,
        "borderWidth": 1,
        "flex": 1,
        "marginBottom": 0,
        "opacity": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#3366FF",
          "height": 4,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 25,
            "paddingVertical": 8,
          },
          Object {},
        ]
      }
      text="title2"
    >
      <Text
        appearance="default"
        category="h6"
        style={
          Array [
            Object {
              "color": "#222B45",
              "fontFamily": "System",
              "fontSize": 18,
              "fontWeight": "800",
            },
            undefined,
          ]
        }
      >
        title2
      </Text>
      <View
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={25}
          bbWidth={25}
          fill="#8F9BB3"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "height": 25,
                "width": 25,
              },
              Object {
                "flex": 0,
                "height": 25,
                "width": 25,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={4287601587}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGGroup>
              <RNSVGGroup>
                <RNSVGRect
                  height="24"
                  opacity={0}
                  width="24"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      appearance="default"
      style={
        Array [
          Object {
            "backgroundColor": "#EDF1F7",
            "height": 1,
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "paddingHorizontal": 24,
          "paddingVertical": 16,
        }
      }
    >
      <Text
        appearance="hint"
        category="p1"
        style={
          Array [
            Object {
              "color": "#8F9BB3",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
            },
            undefined,
          ]
        }
      >
        Your wallets history, you can change your current wallet by clicking "use".
      </Text>
      <RCTScrollView
        ItemSeparatorComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        appearance="default"
        data={
          Array [
            Object {
              "address": "46gPyHjLPPM8HaayVyvCDcF2A8sq8b476VrwKMukrKg21obm1AKEwzoN3u4ooc55FKdNeF5B8vcs4ixbeCyuydr2A2sdsQi",
              "timestamp": "123",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Array [
            Object {
              "backgroundColor": "#F7F9FC",
            },
            undefined,
          ]
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                  "marginLeft": 0,
                  "marginRight": 0,
                  "opacity": 1,
                  "paddingHorizontal": 8,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingVertical": 12,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  appearance="default"
                  category="c2"
                  style={
                    Array [
                      Object {
                        "color": "#222B45",
                        "fontFamily": "System",
                        "fontSize": 12,
                        "fontWeight": "600",
                      },
                      Object {
                        "marginLeft": 0,
                      },
                    ]
                  }
                >
                  123
                </Text>
                <Text
                  appearance="hint"
                  category="c2"
                  style={
                    Array [
                      Object {
                        "color": "#8F9BB3",
                        "fontFamily": "System",
                        "fontSize": 12,
                        "fontWeight": "600",
                      },
                      Object {
                        "marginLeft": 0,
                        "marginRight": 10,
                      },
                    ]
                  }
                >
                  46gPyHjLPPM8HaayVyvCDcF2A8sq8b476VrwKMukrKg21obm1AKEwzoN3u4ooc55FKdNeF5B8vcs4ixbeCyuydr2A2sdsQi
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(143, 155, 179, 0.16)",
                    "borderColor": "rgba(143, 155, 179, 0.24)",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "minHeight": 24,
                    "minWidth": 24,
                    "opacity": 1,
                    "paddingHorizontal": 6,
                    "paddingVertical": 6,
                  }
                }
              >
                <Text
                  appearance="default"
                  category="p1"
                  style={
                    Array [
                      Object {
                        "color": "#222B45",
                        "fontFamily": "System",
                        "fontSize": 15,
                        "fontWeight": "400",
                      },
                      Object {
                        "color": "rgba(143, 155, 179, 0.48)",
                        "fontFamily": "System",
                        "fontSize": 10,
                        "fontWeight": "bold",
                        "marginHorizontal": 6,
                      },
                    ]
                  }
                >
                  USE
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`@history-card: component checks valid wallet & wallet history: valid 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E4E9F2",
        "borderRadius": 4,
        "borderWidth": 1,
        "flex": 1,
        "marginBottom": 0,
        "opacity": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#3366FF",
          "height": 4,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 25,
            "paddingVertical": 8,
          },
          Object {},
        ]
      }
      text="title"
    >
      <Text
        appearance="default"
        category="h6"
        style={
          Array [
            Object {
              "color": "#222B45",
              "fontFamily": "System",
              "fontSize": 18,
              "fontWeight": "800",
            },
            undefined,
          ]
        }
      >
        title
      </Text>
      <View
        style={
          Object {
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={25}
          bbWidth={25}
          fill="#8F9BB3"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Object {
                "height": 25,
                "width": 25,
              },
              Object {
                "flex": 0,
                "height": 25,
                "width": 25,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={4287601587}
            propList={
              Array [
                "fill",
              ]
            }
          >
            <RNSVGGroup>
              <RNSVGGroup>
                <RNSVGRect
                  height="24"
                  opacity={0}
                  width="24"
                  x={0}
                  y={0}
                />
                <RNSVGPath
                  d="M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z"
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      appearance="default"
      style={
        Array [
          Object {
            "backgroundColor": "#EDF1F7",
            "height": 1,
          },
          undefined,
        ]
      }
    />
    <View
      style={
        Object {
          "paddingHorizontal": 24,
          "paddingVertical": 16,
        }
      }
    >
      <Text
        appearance="hint"
        category="p1"
        style={
          Array [
            Object {
              "color": "#8F9BB3",
              "fontFamily": "System",
              "fontSize": 15,
              "fontWeight": "400",
            },
            undefined,
          ]
        }
      >
        Your wallets history, you can change your current wallet by clicking "use".
      </Text>
      <RCTScrollView
        ItemSeparatorComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          }
        }
        appearance="default"
        data={
          Array [
            Object {
              "address": "46gPyHjLPPM8HaayVyvCDcF2A8sq8b476VrwKMukrKg21obm1AKEwzoN3u4ooc55FKdNeF5B8vcs4ixbeCyuydr2A2sdsQi",
              "timestamp": "123",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Array [
            Object {
              "backgroundColor": "#F7F9FC",
            },
            undefined,
          ]
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                  "marginLeft": 0,
                  "marginRight": 0,
                  "opacity": 1,
                  "paddingHorizontal": 8,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingVertical": 12,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Text
                  appearance="default"
                  category="c2"
                  style={
                    Array [
                      Object {
                        "color": "#222B45",
                        "fontFamily": "System",
                        "fontSize": 12,
                        "fontWeight": "600",
                      },
                      Object {
                        "marginLeft": 0,
                      },
                    ]
                  }
                >
                  123
                </Text>
                <Text
                  appearance="hint"
                  category="c2"
                  style={
                    Array [
                      Object {
                        "color": "#8F9BB3",
                        "fontFamily": "System",
                        "fontSize": 12,
                        "fontWeight": "600",
                      },
                      Object {
                        "marginLeft": 0,
                        "marginRight": 10,
                      },
                    ]
                  }
                >
                  46gPyHjLPPM8HaayVyvCDcF2A8sq8b476VrwKMukrKg21obm1AKEwzoN3u4ooc55FKdNeF5B8vcs4ixbeCyuydr2A2sdsQi
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(143, 155, 179, 0.16)",
                    "borderColor": "rgba(143, 155, 179, 0.24)",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "minHeight": 24,
                    "minWidth": 24,
                    "opacity": 1,
                    "paddingHorizontal": 6,
                    "paddingVertical": 6,
                  }
                }
              >
                <Text
                  appearance="default"
                  category="p1"
                  style={
                    Array [
                      Object {
                        "color": "#222B45",
                        "fontFamily": "System",
                        "fontSize": 15,
                        "fontWeight": "400",
                      },
                      Object {
                        "color": "rgba(143, 155, 179, 0.48)",
                        "fontFamily": "System",
                        "fontSize": 10,
                        "fontWeight": "bold",
                        "marginHorizontal": 6,
                      },
                    ]
                  }
                >
                  USE
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
